Index: ApacheFop.Net.vjsproj
===================================================================
--- ApacheFop.Net.vjsproj	(revision 6)
+++ ApacheFop.Net.vjsproj	(working copy)
@@ -78,6 +78,7 @@
     <Compile Include="apps\FormattingResults.java">
       <SubType>Code</SubType>
     </Compile>
+    <Compile Include="apps\NFop.java" />
     <Compile Include="apps\PageSequenceResults.java">
       <SubType>Code</SubType>
     </Compile>
@@ -4142,6 +4143,11 @@
     <None Include="xerces-2_0_2\src\org\apache\xerces\parsers\org.xml.sax.driver" />
     <None Include="xerces-2_0_2\src\org\apache\xml\serialize\HTMLEntities.res" />
   </ItemGroup>
+  <ItemGroup>
+    <EmbeddedResource Include="xerces-2_0_2\src\org\apache\xerces\impl\msg\Messages.resx">
+      <SubType>Designer</SubType>
+    </EmbeddedResource>
+  </ItemGroup>
   <Import Project="$(MSBuildBinPath)\Microsoft.VisualJSharp.targets" />
   <PropertyGroup>
     <PreBuildEvent>
Index: configuration/Configuration.java
===================================================================
--- configuration/Configuration.java	(revision 2)
+++ configuration/Configuration.java	(working copy)
@@ -292,18 +292,21 @@
                                               Configuration.STANDARD);
     }
 
+	private static URL buildBaseURL(String directory) throws java.net.MalformedURLException
+	{
+		if (directory == null) return null;
+		File dir = new File(directory);
+		if (dir.isDirectory())
+		{
+			return dir.toURL();
+		}
+		else
+		{
+			URL baseURL = new URL(directory);
+			return baseURL;
+		}
+	}
 
-    private static URL buildBaseURL(String directory) throws java.net.MalformedURLException {
-        if (directory == null) return null;
-        File dir = new File(directory);
-        if (dir.isDirectory()) {
-            return new URL(dir.toString());
-        } else {
-            URL baseURL = new URL(directory);
-            return baseURL;
-        }
-    }
-
     public static URL getBaseURL() {
         if (cachedBaseURL != null) {
             return cachedBaseURL;
Index: fonts/apps/TTFReader.java
===================================================================
--- fonts/apps/TTFReader.java	(revision 7)
+++ fonts/apps/TTFReader.java	(working copy)
@@ -53,6 +53,7 @@
 import java.io.*;
 import org.w3c.dom.*;
 import org.apache.fop.fonts.*;
+import org.apache.xml.serialize.*;
 import java.util.HashMap;
 import java.util.ArrayList;
 import java.util.Iterator;
@@ -98,7 +99,8 @@
 
 
     private static final void displayUsage() {
-        System.out.println(" java org.apache.fop.fonts.apps.TTFReader [options] fontfile.ttf xmlfile.xml\n");
+//        System.out.println(" java org.apache.fop.fonts.apps.TTFReader [options] fontfile.ttf xmlfile.xml\n");
+		System.out.println(" TTFReader [options] fontfile.ttf xmlfile.xml\n");
         System.out.println(" where options can be:\n");
         System.out.println("-enc ansi");
         System.out.println("     With this option you create a WinAnsi encoded font.\n");
@@ -139,7 +141,7 @@
      * You can use both -ef and -er. The file specified in -ef will be searched first,
      * then the -er file.
      */
-    public static void main(String[] args) {
+    public static void main(String[] args) throws java.io.IOException {
         String embFile = null;
         String embResource = null;
         String className = null;
@@ -193,15 +195,15 @@
                     System.out.println("Creating WinAnsi encoded metrics");
 
                 if (doc != null) {
-                    app.writeFontXML(doc, arguments[1]);
+						app.writeFontXML(doc, arguments[1]);
+
+						if (ttf.isEmbeddable())
+							System.out.println("This font contains no embedding license restrictions");
+						else
+							System.out.println("** Note: This font contains license retrictions for\n"
+											   + "         embedding. This font shouldn't be embedded.");
                 }
 
-                if (ttf.isEmbeddable())
-                    System.out.println("This font contains no embedding license restrictions");
-                else
-                    System.out.println("** Note: This font contains license retrictions for\n"
-                                       + "         embedding. This font shouldn't be embedded.");
-
             }
         }
     }
@@ -234,28 +236,17 @@
      * @param   doc The DOM Document to save.
      * @param   target The target filename for the XML file.
      */
-    public void writeFontXML(org.w3c.dom.Document doc, String target) {
+    public void writeFontXML(org.w3c.dom.Document doc, String target) throws java.io.IOException
+	{
         System.out.println("Writing xml font file " + target + "...");
         System.out.println();
 
-        try {
-/*
-          javax.xml.transform.TransformerFactory.newInstance()
-            .newTransformer().transform(
-              new javax.xml.transform.dom.DOMSource(doc),
-              new javax.xml.transform.stream.StreamResult(new File(target)));
-
-            OutputFormat format = new OutputFormat(doc);    // Serialize DOM
-            FileWriter out = new FileWriter(target);    // Writer will be a String
-            XMLSerializer serial = new XMLSerializer(out, format);
-            serial.asDOMSerializer();                       // As a DOM Serializer
-
-            serial.serialize(doc.getDocumentElement());
-            out.close();
-*/
-        } catch (Exception e) {
-            e.printStackTrace();
-        }
+		OutputFormat format = new OutputFormat(doc);    // Serialize DOM
+		FileWriter writer = new FileWriter(target);    // Writer will be a String
+		XMLSerializer serial = new XMLSerializer(writer, format);
+		serial.asDOMSerializer();                       // As a DOM Serializer
+		serial.serialize(doc.getDocumentElement());
+		writer.close();
     }
 
     /**
Index: render/pdf/PDFRenderer.java
===================================================================
--- render/pdf/PDFRenderer.java	(revision 2)
+++ render/pdf/PDFRenderer.java	(working copy)
@@ -821,7 +821,7 @@
         byte[] uniBytes = null;
         try {
             char[] a = {c};
-            uniBytes = new String(a).getBytes("UnicodeBigUnmarked");
+            uniBytes = new String(a).getBytes("UnicodeBig");
         } catch (Exception e) {
             // This should never fail
             throw new org.apache.avalon.framework.CascadingRuntimeException("Incompatible VM", e);
Index: tools/URLBuilder.java
===================================================================
--- tools/URLBuilder.java	(revision 2)
+++ tools/URLBuilder.java	(working copy)
@@ -71,16 +71,20 @@
      * @return      The requested URL
      * @throws MalformedURLException If spec cannot be converted to a URL.
      */
-    public static URL buildURL(String spec) throws MalformedURLException {
-        if (spec == null) throw new NullPointerException("spec must not be null");
-        File f = new File(spec);
-        if (f.exists()) {
-            return new URL(f.toString());
-        } else {
-            URL u1 = new URL(spec);
-            return u1;
-        }
-    }
+	public static URL buildURL(String spec) throws MalformedURLException
+	{
+		if (spec == null) throw new NullPointerException("spec must not be null");
+		File f = new File(spec);
+		if (f.exists())
+		{
+			return f.toURL();
+		}
+		else
+		{
+			URL u1 = new URL(spec);
+			return u1;
+		}
+	}
 
 
     /**
Index: xerces-2_0_2/src/org/apache/xerces/impl/msg/XMLMessageFormatter.java
===================================================================
--- xerces-2_0_2/src/org/apache/xerces/impl/msg/XMLMessageFormatter.java	(revision 2)
+++ xerces-2_0_2/src/org/apache/xerces/impl/msg/XMLMessageFormatter.java	(working copy)
@@ -107,12 +107,12 @@
         
         if (fResourceBundle == null || locale != fLocale) {
             if (locale != null) {
-                fResourceBundle = PropertyResourceBundle.getBundle("org.apache.xerces.impl.msg.XMLMessages", locale);
+                fResourceBundle = PropertyResourceBundle.getBundle("XMLMessages", locale);
                 // memorize the most-recent locale
                 fLocale = locale;
             }
             if (fResourceBundle == null)
-                fResourceBundle = PropertyResourceBundle.getBundle("org.apache.xerces.impl.msg.XMLMessages");
+                fResourceBundle = PropertyResourceBundle.getBundle("XMLMessages");
         }
         
         // format message
Index: xerces-2_0_2/src/org/apache/xerces/impl/xs/XSMessageFormatter.java
===================================================================
--- xerces-2_0_2/src/org/apache/xerces/impl/xs/XSMessageFormatter.java	(revision 2)
+++ xerces-2_0_2/src/org/apache/xerces/impl/xs/XSMessageFormatter.java	(working copy)
@@ -102,12 +102,12 @@
         
         if (fResourceBundle == null || locale != fLocale) {
             if (locale != null) {
-                fResourceBundle = PropertyResourceBundle.getBundle("org.apache.xerces.impl.msg.XMLSchemaMessages", locale);
+                fResourceBundle = PropertyResourceBundle.getBundle("XMLSchemaMessages", locale);
                 // memorize the most-recent locale
                 fLocale = locale;
             }
             if (fResourceBundle == null)
-                fResourceBundle = PropertyResourceBundle.getBundle("org.apache.xerces.impl.msg.XMLSchemaMessages");
+                fResourceBundle = PropertyResourceBundle.getBundle("XMLSchemaMessages");
         }
         
         String msg = fResourceBundle.getString(key);
